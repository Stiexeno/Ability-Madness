//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Bogenbai.CustomGenerators.Plugins.CustomComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    private AbilityMadness.Code.Gameplay.Projectile.ProjectileTypeComponent projectileType { get { return (AbilityMadness.Code.Gameplay.Projectile.ProjectileTypeComponent)GetComponent(GameComponentsLookup.ProjectileType); } }
    public AbilityMadness.Code.Gameplay.Projectile.ProjectileType ProjectileType { get { return projectileType.Value; } set { projectileType.Value = value; }}
    public bool hasProjectileType { get { return HasComponent(GameComponentsLookup.ProjectileType); } }

    public GameEntity AddProjectileType(AbilityMadness.Code.Gameplay.Projectile.ProjectileType newValue) {
        var index = GameComponentsLookup.ProjectileType;
        var component = (AbilityMadness.Code.Gameplay.Projectile.ProjectileTypeComponent)CreateComponent(index, typeof(AbilityMadness.Code.Gameplay.Projectile.ProjectileTypeComponent));
        component.Value = newValue;
        AddComponent(index, component);

        return this;
    }

    public GameEntity ReactiveReplaceProjectileType(AbilityMadness.Code.Gameplay.Projectile.ProjectileType newValue) {
        var index = GameComponentsLookup.ProjectileType;
        var component = (AbilityMadness.Code.Gameplay.Projectile.ProjectileTypeComponent)CreateComponent(index, typeof(AbilityMadness.Code.Gameplay.Projectile.ProjectileTypeComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);

        return this;
    }

    public GameEntity ReplaceProjectileType(AbilityMadness.Code.Gameplay.Projectile.ProjectileType newValue) {
        if (!hasProjectileType) 
        {
            AddProjectileType(newValue);
            return this;
        }

        projectileType.Value = newValue;
        return this;
    }

    public GameEntity RemoveProjectileType() {
        RemoveComponent(GameComponentsLookup.ProjectileType);
        return this;
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherProjectileType;

    public static Entitas.IMatcher<GameEntity> ProjectileType {
        get {
            if (_matcherProjectileType == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ProjectileType);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherProjectileType = matcher;
            }

            return _matcherProjectileType;
        }
    }
}
