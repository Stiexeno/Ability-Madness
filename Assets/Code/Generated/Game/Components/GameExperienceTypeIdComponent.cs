//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Bogenbai.CustomGenerators.Plugins.CustomComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    private AbilityMadness.Code.Gameplay.Experience.ExperienceTypeIdComponent experienceTypeId { get { return (AbilityMadness.Code.Gameplay.Experience.ExperienceTypeIdComponent)GetComponent(GameComponentsLookup.ExperienceTypeId); } }
    public AbilityMadness.Code.Gameplay.Experience.ExperienceTypeId ExperienceTypeId { get { return experienceTypeId.Value; } set { experienceTypeId.Value = value; }}
    public bool hasExperienceTypeId { get { return HasComponent(GameComponentsLookup.ExperienceTypeId); } }

    public GameEntity AddExperienceTypeId(AbilityMadness.Code.Gameplay.Experience.ExperienceTypeId newValue) {
        var index = GameComponentsLookup.ExperienceTypeId;
        var component = (AbilityMadness.Code.Gameplay.Experience.ExperienceTypeIdComponent)CreateComponent(index, typeof(AbilityMadness.Code.Gameplay.Experience.ExperienceTypeIdComponent));
        component.Value = newValue;
        AddComponent(index, component);

        return this;
    }

    public GameEntity ReactiveReplaceExperienceTypeId(AbilityMadness.Code.Gameplay.Experience.ExperienceTypeId newValue) {
        var index = GameComponentsLookup.ExperienceTypeId;
        var component = (AbilityMadness.Code.Gameplay.Experience.ExperienceTypeIdComponent)CreateComponent(index, typeof(AbilityMadness.Code.Gameplay.Experience.ExperienceTypeIdComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);

        return this;
    }

    public GameEntity ReplaceExperienceTypeId(AbilityMadness.Code.Gameplay.Experience.ExperienceTypeId newValue) {
        if (!hasExperienceTypeId) 
        {
            AddExperienceTypeId(newValue);
            return this;
        }

        experienceTypeId.Value = newValue;
        return this;
    }

    public GameEntity RemoveExperienceTypeId() {
        RemoveComponent(GameComponentsLookup.ExperienceTypeId);
        return this;
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherExperienceTypeId;

    public static Entitas.IMatcher<GameEntity> ExperienceTypeId {
        get {
            if (_matcherExperienceTypeId == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ExperienceTypeId);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherExperienceTypeId = matcher;
            }

            return _matcherExperienceTypeId;
        }
    }
}
