//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Bogenbai.CustomGenerators.Plugins.CustomComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    private AbilityMadness.Code.Gameplay.DamageApplication.DamageTypeIdComponent damageTypeId { get { return (AbilityMadness.Code.Gameplay.DamageApplication.DamageTypeIdComponent)GetComponent(GameComponentsLookup.DamageTypeId); } }
    public AbilityMadness.Code.Gameplay.DamageApplication.DamageTypeId DamageTypeId { get { return damageTypeId.Value; } set { damageTypeId.Value = value; }}
    public bool hasDamageTypeId { get { return HasComponent(GameComponentsLookup.DamageTypeId); } }

    public GameEntity AddDamageTypeId(AbilityMadness.Code.Gameplay.DamageApplication.DamageTypeId newValue) {
        var index = GameComponentsLookup.DamageTypeId;
        var component = (AbilityMadness.Code.Gameplay.DamageApplication.DamageTypeIdComponent)CreateComponent(index, typeof(AbilityMadness.Code.Gameplay.DamageApplication.DamageTypeIdComponent));
        component.Value = newValue;
        AddComponent(index, component);

        return this;
    }

    public GameEntity ReactiveReplaceDamageTypeId(AbilityMadness.Code.Gameplay.DamageApplication.DamageTypeId newValue) {
        var index = GameComponentsLookup.DamageTypeId;
        var component = (AbilityMadness.Code.Gameplay.DamageApplication.DamageTypeIdComponent)CreateComponent(index, typeof(AbilityMadness.Code.Gameplay.DamageApplication.DamageTypeIdComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);

        return this;
    }

    public GameEntity ReplaceDamageTypeId(AbilityMadness.Code.Gameplay.DamageApplication.DamageTypeId newValue) {
        if (!hasDamageTypeId) 
        {
            AddDamageTypeId(newValue);
            return this;
        }

        damageTypeId.Value = newValue;
        return this;
    }

    public GameEntity RemoveDamageTypeId() {
        RemoveComponent(GameComponentsLookup.DamageTypeId);
        return this;
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDamageTypeId;

    public static Entitas.IMatcher<GameEntity> DamageTypeId {
        get {
            if (_matcherDamageTypeId == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DamageTypeId);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDamageTypeId = matcher;
            }

            return _matcherDamageTypeId;
        }
    }
}
