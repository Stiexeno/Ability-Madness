//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Bogenbai.CustomGenerators.Plugins.CustomComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    private AbilityMadness.Code.Gameplay.Weapons.WeaponAnimatorComponent weaponAnimator { get { return (AbilityMadness.Code.Gameplay.Weapons.WeaponAnimatorComponent)GetComponent(GameComponentsLookup.WeaponAnimator); } }
    public AbilityMadness.Code.Gameplay.Weapons.Behaviours.WeaponAnimator WeaponAnimator { get { return weaponAnimator.Value; } set { weaponAnimator.Value = value; }}
    public bool hasWeaponAnimator { get { return HasComponent(GameComponentsLookup.WeaponAnimator); } }

    public GameEntity AddWeaponAnimator(AbilityMadness.Code.Gameplay.Weapons.Behaviours.WeaponAnimator newValue) {
        var index = GameComponentsLookup.WeaponAnimator;
        var component = (AbilityMadness.Code.Gameplay.Weapons.WeaponAnimatorComponent)CreateComponent(index, typeof(AbilityMadness.Code.Gameplay.Weapons.WeaponAnimatorComponent));
        component.Value = newValue;
        AddComponent(index, component);

        return this;
    }

    public GameEntity ReactiveReplaceWeaponAnimator(AbilityMadness.Code.Gameplay.Weapons.Behaviours.WeaponAnimator newValue) {
        var index = GameComponentsLookup.WeaponAnimator;
        var component = (AbilityMadness.Code.Gameplay.Weapons.WeaponAnimatorComponent)CreateComponent(index, typeof(AbilityMadness.Code.Gameplay.Weapons.WeaponAnimatorComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);

        return this;
    }

    public GameEntity ReplaceWeaponAnimator(AbilityMadness.Code.Gameplay.Weapons.Behaviours.WeaponAnimator newValue) {
        if (!hasWeaponAnimator) 
        {
            AddWeaponAnimator(newValue);
            return this;
        }

        weaponAnimator.Value = newValue;
        return this;
    }

    public GameEntity RemoveWeaponAnimator() {
        RemoveComponent(GameComponentsLookup.WeaponAnimator);
        return this;
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWeaponAnimator;

    public static Entitas.IMatcher<GameEntity> WeaponAnimator {
        get {
            if (_matcherWeaponAnimator == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WeaponAnimator);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWeaponAnimator = matcher;
            }

            return _matcherWeaponAnimator;
        }
    }
}
