//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Bogenbai.CustomGenerators.Plugins.CustomComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    private AbilityMadness.Code.Common.Particles.ParticleSystemComponent particleSystem { get { return (AbilityMadness.Code.Common.Particles.ParticleSystemComponent)GetComponent(GameComponentsLookup.ParticleSystem); } }
    public UnityEngine.ParticleSystem ParticleSystem { get { return particleSystem.Value; } set { particleSystem.Value = value; }}
    public bool hasParticleSystem { get { return HasComponent(GameComponentsLookup.ParticleSystem); } }

    public GameEntity AddParticleSystem(UnityEngine.ParticleSystem newValue) {
        var index = GameComponentsLookup.ParticleSystem;
        var component = (AbilityMadness.Code.Common.Particles.ParticleSystemComponent)CreateComponent(index, typeof(AbilityMadness.Code.Common.Particles.ParticleSystemComponent));
        component.Value = newValue;
        AddComponent(index, component);

        return this;
    }

    public GameEntity ReactiveReplaceParticleSystem(UnityEngine.ParticleSystem newValue) {
        var index = GameComponentsLookup.ParticleSystem;
        var component = (AbilityMadness.Code.Common.Particles.ParticleSystemComponent)CreateComponent(index, typeof(AbilityMadness.Code.Common.Particles.ParticleSystemComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);

        return this;
    }

    public GameEntity ReplaceParticleSystem(UnityEngine.ParticleSystem newValue) {
        if (!hasParticleSystem) 
        {
            AddParticleSystem(newValue);
            return this;
        }

        particleSystem.Value = newValue;
        return this;
    }

    public GameEntity RemoveParticleSystem() {
        RemoveComponent(GameComponentsLookup.ParticleSystem);
        return this;
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherParticleSystem;

    public static Entitas.IMatcher<GameEntity> ParticleSystem {
        get {
            if (_matcherParticleSystem == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ParticleSystem);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherParticleSystem = matcher;
            }

            return _matcherParticleSystem;
        }
    }
}
