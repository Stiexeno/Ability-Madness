//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Bogenbai.CustomGenerators.Plugins.CustomComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    private AbilityMadness.Code.Gameplay.Projectile.Throwable.ThrowableAnimatorComponent throwableAnimator { get { return (AbilityMadness.Code.Gameplay.Projectile.Throwable.ThrowableAnimatorComponent)GetComponent(GameComponentsLookup.ThrowableAnimator); } }
    public AbilityMadness.Code.Gameplay.Projectile.Systems.Throwable.Behaviours.ThrowableAnimator ThrowableAnimator { get { return throwableAnimator.Value; } set { throwableAnimator.Value = value; }}
    public bool hasThrowableAnimator { get { return HasComponent(GameComponentsLookup.ThrowableAnimator); } }

    public GameEntity AddThrowableAnimator(AbilityMadness.Code.Gameplay.Projectile.Systems.Throwable.Behaviours.ThrowableAnimator newValue) {
        var index = GameComponentsLookup.ThrowableAnimator;
        var component = (AbilityMadness.Code.Gameplay.Projectile.Throwable.ThrowableAnimatorComponent)CreateComponent(index, typeof(AbilityMadness.Code.Gameplay.Projectile.Throwable.ThrowableAnimatorComponent));
        component.Value = newValue;
        AddComponent(index, component);

        return this;
    }

    public GameEntity ReactiveReplaceThrowableAnimator(AbilityMadness.Code.Gameplay.Projectile.Systems.Throwable.Behaviours.ThrowableAnimator newValue) {
        var index = GameComponentsLookup.ThrowableAnimator;
        var component = (AbilityMadness.Code.Gameplay.Projectile.Throwable.ThrowableAnimatorComponent)CreateComponent(index, typeof(AbilityMadness.Code.Gameplay.Projectile.Throwable.ThrowableAnimatorComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);

        return this;
    }

    public GameEntity ReplaceThrowableAnimator(AbilityMadness.Code.Gameplay.Projectile.Systems.Throwable.Behaviours.ThrowableAnimator newValue) {
        if (!hasThrowableAnimator) 
        {
            AddThrowableAnimator(newValue);
            return this;
        }

        throwableAnimator.Value = newValue;
        return this;
    }

    public GameEntity RemoveThrowableAnimator() {
        RemoveComponent(GameComponentsLookup.ThrowableAnimator);
        return this;
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherThrowableAnimator;

    public static Entitas.IMatcher<GameEntity> ThrowableAnimator {
        get {
            if (_matcherThrowableAnimator == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ThrowableAnimator);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherThrowableAnimator = matcher;
            }

            return _matcherThrowableAnimator;
        }
    }
}
