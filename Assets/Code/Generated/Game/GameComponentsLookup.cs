//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int Destructed = 0;
    public const int Disabled = 1;
    public const int Enabled = 2;
    public const int Id = 3;
    public const int Rigidbody2D = 4;
    public const int Transform = 5;
    public const int View = 6;
    public const int ViewLoading = 7;
    public const int ViewPath = 8;
    public const int WorldPosition = 9;
    public const int MovementAnimator = 10;
    public const int Camera = 11;
    public const int CameraOffset = 12;
    public const int CameraSmooth = 13;
    public const int CameraVelocity = 14;
    public const int FollowTargetId = 15;
    public const int Chest = 16;
    public const int ChestInteracting = 17;
    public const int CollidedId = 18;
    public const int ColliderOwnerId = 19;
    public const int Collision = 20;
    public const int CollisionEnter = 21;
    public const int CollisionExit = 22;
    public const int CollisionStay = 23;
    public const int TriggerEnter = 24;
    public const int TriggerExit = 25;
    public const int TriggerStay = 26;
    public const int AxisInput = 27;
    public const int LookInput = 28;
    public const int InteractBehaviour = 29;
    public const int Alive = 30;
    public const int Direction = 31;
    public const int LookDirection = 32;
    public const int MovementSpeed = 33;
    public const int RigidbodyMovement = 34;
    public const int TransformMovement = 35;
    public const int Velocity = 36;
    public const int Player = 37;
    public const int PlayerTriggered = 38;

    public const int TotalComponents = 39;

    public static readonly string[] componentNames = {
        "Destructed",
        "Disabled",
        "Enabled",
        "Id",
        "Rigidbody2D",
        "Transform",
        "View",
        "ViewLoading",
        "ViewPath",
        "WorldPosition",
        "MovementAnimator",
        "Camera",
        "CameraOffset",
        "CameraSmooth",
        "CameraVelocity",
        "FollowTargetId",
        "Chest",
        "ChestInteracting",
        "CollidedId",
        "ColliderOwnerId",
        "Collision",
        "CollisionEnter",
        "CollisionExit",
        "CollisionStay",
        "TriggerEnter",
        "TriggerExit",
        "TriggerStay",
        "AxisInput",
        "LookInput",
        "InteractBehaviour",
        "Alive",
        "Direction",
        "LookDirection",
        "MovementSpeed",
        "RigidbodyMovement",
        "TransformMovement",
        "Velocity",
        "Player",
        "PlayerTriggered"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(AbilityMadness.Code.Common.Destructed),
        typeof(AbilityMadness.Code.Common.Disabled),
        typeof(AbilityMadness.Code.Common.Enabled),
        typeof(AbilityMadness.Code.Common.Id),
        typeof(AbilityMadness.Code.Common.Rigidbody2D),
        typeof(AbilityMadness.Code.Common.Transform),
        typeof(AbilityMadness.Code.Common.View),
        typeof(AbilityMadness.Code.Common.ViewLoading),
        typeof(AbilityMadness.Code.Common.ViewPath),
        typeof(AbilityMadness.Code.Common.WorldPosition),
        typeof(AbilityMadness.Code.Gameplay.Animator.MovementAnimator),
        typeof(AbilityMadness.Code.Gameplay.Camera.Camera),
        typeof(AbilityMadness.Code.Gameplay.Camera.CameraOffset),
        typeof(AbilityMadness.Code.Gameplay.Camera.CameraSmooth),
        typeof(AbilityMadness.Code.Gameplay.Camera.CameraVelocity),
        typeof(AbilityMadness.Code.Gameplay.Camera.FollowTargetId),
        typeof(AbilityMadness.Code.Gameplay.Chest.Chest),
        typeof(AbilityMadness.Code.Gameplay.Chest.ChestInteracting),
        typeof(AbilityMadness.Code.Gameplay.Collision.CollidedId),
        typeof(AbilityMadness.Code.Gameplay.Collision.ColliderOwnerId),
        typeof(AbilityMadness.Code.Gameplay.Collision.Collision),
        typeof(AbilityMadness.Code.Gameplay.Collision.CollisionEnter),
        typeof(AbilityMadness.Code.Gameplay.Collision.CollisionExit),
        typeof(AbilityMadness.Code.Gameplay.Collision.CollisionStay),
        typeof(AbilityMadness.Code.Gameplay.Collision.TriggerEnter),
        typeof(AbilityMadness.Code.Gameplay.Collision.TriggerExit),
        typeof(AbilityMadness.Code.Gameplay.Collision.TriggerStay),
        typeof(AbilityMadness.Code.Gameplay.Input.AxisInput),
        typeof(AbilityMadness.Code.Gameplay.Input.LookInput),
        typeof(AbilityMadness.Code.Gameplay.Interaction.InteractBehaviourComponent),
        typeof(AbilityMadness.Code.Gameplay.Lifetime.Alive),
        typeof(AbilityMadness.Code.Gameplay.Movement.Direction),
        typeof(AbilityMadness.Code.Gameplay.Movement.LookDirection),
        typeof(AbilityMadness.Code.Gameplay.Movement.MovementSpeed),
        typeof(AbilityMadness.Code.Gameplay.Movement.RigidbodyMovement),
        typeof(AbilityMadness.Code.Gameplay.Movement.TransformMovement),
        typeof(AbilityMadness.Code.Gameplay.Movement.Velocity),
        typeof(AbilityMadness.Player),
        typeof(AbilityMadness.PlayerTriggered)
    };
}
